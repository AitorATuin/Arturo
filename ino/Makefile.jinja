
{% set libname = 'core' %}
{% set libdir = e.build_dir|pjoin(libname) %}
{% set libpath = libdir|pjoin(libname|libname) %}
{% set libobjs = SpaceList() %}

# mkdir for lib objects
{{ libdir }} :
	mkdir -p {{ libdir }}

# core library .c -> objects (.o)
{% for file in e.arduino_core_dir|glob('*.c') %}
{% set objname = libdir|pjoin(file)|objname %}
{% do libobjs.append(objname) %}
{{ objname }} : {{ libdir }} {{ file.path }}
	{{ e.cc }} {{ e.cflags }} -c {{ file.path }} -o $@
{% endfor -%}

# core library .cpp -> objects (.o)
{% for file in e.arduino_core_dir|glob('*.cpp') %}
{% set objname = libdir|pjoin(file)|objname %}
{% do libobjs.append(objname) %}
{{ objname }} : {{ libdir }} {{ file.path }}
	{{ e.cxx }} {{ e.cflags }} -c {{ file.path }} -o $@
{% endfor -%}

# core lib objects -> archive (.a)
{{ libpath }} : {{ libobjs }}
	{{ e.ar }} rcs $@ {{ libobjs }}

{% set pde = e.src_dir|glob('*.pde')|filemap(e.build_dir, '%s.cpp') %}
{% for source, target in pde.iterpaths() %}
{{ target }} : {{ source }}
	echo '#include <WProgram.h>' > $@
	cat {{ source }} >> $@
{% endfor %}

{% set c = e.src_dir|glob('*.c')|filemap(e.build_dir, e.names.obj) %}
{% for source, target in c.iterpaths() %}
{{ target }} : {{ source }}
	{{ e.cc }} {{ e.cflags }} -o {{ target }} -c {{ source }}
{% endfor %}

{% set cpp = (e.src_dir|glob('*.cpp') + pde.targets())|filemap(e.build_dir, e.names.obj) %}
{% for source, target in cpp.iterpaths() %}
{{ target }} : {{ source }}
	{{ e.cxx }} {{ e.cflags }} -o {{ target }} -c {{ source }}
{% endfor %}

{% set objs = c.target_paths() + cpp.target_paths() + [libpath] %}

{% set elf = e.build_dir|pjoin('firmware.elf') %}
{{ elf }} : {{ objs }}
	{{ e.cc }} -o $@ {{ objs }}

{% set hex = e.build_dir|pjoin('firmware.hex') %}
{{ hex }} : {{ elf }}
	{{ e.objcopy }} -O ihex -R .eeprom {{ elf }} $@

all : {{ hex }}

