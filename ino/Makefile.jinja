
{% set libname = 'core' %}
{% set libdir = e.build_dir|pjoin(libname) %}
{% set libpath = libdir|pjoin(libname|libname) %}
{% set libobjs = SpaceList() %}

# mkdir for lib objects
{{ libdir }} :
	mkdir -p {{ libdir }}

# core library .c -> objects (.o)
{% for file in e.arduino_core_dir|glob('*.c') %}
{% set objname = libdir|pjoin(file)|objname %}
{% do libobjs.append(objname) %}
{{ objname }} : {{ libdir }} {{ file.path }}
	{{ e.cc }} {{ e.cflags }} -c {{ file.path }} -o $@
{% endfor -%}

# core library .cpp -> objects (.o)
{% for file in e.arduino_core_dir|glob('*.cpp') %}
{% set objname = libdir|pjoin(file)|objname %}
{% do libobjs.append(objname) %}
{{ objname }} : {{ libdir }} {{ file.path }}
	{{ e.cxx }} {{ e.cflags }} -c {{ file.path }} -o $@
{% endfor -%}

# core lib objects -> archive (.a)
{{ libpath }} : {{ libobjs }}
	{{ e.ar }} rcs $@ {{ libobjs }}

.build/sketch.cpp : src/sketch.pde
	echo '#include <WProgram.h>' > .build/sketch.cpp
	cat src/sketch.pde >> .build/sketch.cpp

.build/sketch.o : .build/sketch.cpp
	{{ e.cc }} {{ e.cflags }} -o .build/sketch.o -c .build/sketch.cpp

.build/firmware.elf : .build/sketch.o {{ libpath }}
	{{ e.cc }} -o .build/firmware.elf .build/sketch.o {{ libpath }}

.build/firmware.hex : .build/firmware.elf
	{{ e.objcopy }} -O ihex -R .eeprom .build/firmware.elf .build/firmware.hex

all : .build/firmware.hex

